/* Автор: Бурдинская Наталья Задача 
*  Задача 676а: Дана целочисленная матрица размера 6х9
*  Найти матрицу получающуюся из данной:
*  a) перестановкой столбцов - первого с последним,
*  второго с предпоследним и т.д.
*  Разбить задачу на функции.
*/
#include <iostream> // Объявляет объекты cin cout, управляющие чтением из стандартных потоков и записью в них.
#include <iomanip> // стандартный для определения нужного числа манипуляторов setw setprecision.
#include "Modul_zd3_massiv1.h" // вызов заголовочного файла модуля 
using namespace std; // теперь можно обращаться ко всем именам, описанным в std, непосредственно, без префикса std::

// тело основной программы
int main()
{
	// определение переменной n и m (объявление + инициализация)
	unsigned n = 0; // строк N
	unsigned m = 0; // столбцов M
	setlocale(0, "Russian"); // руссификатор
    cout << "create a matrix: a[n,m] \n";
    cout << " n = "; cin >> n; 
	cout << " m = "; cin >> m; 
    cout << "\n";
	
	int** f = Memo_Mass(n,m); // выделение памяти для массива N, n – фактический параметр
	cout << "Zero matrix a[n,m] \n"; // матрица с аргументами 0
	Screen_Mass(f, n, m); // выводим на экран нулевой массив
	
    cout << "Vvod matrix a[n,m] \n"; 
	Vvod_Mass(f, n, m); // выполняем ввод массива
	Screen_Mass(f, n, m); // выводим на экран введенный массив 
	
	cout << "Answer:" << endl;
	// вызов функции Perestanovka_Mass, создание новой матрицы, вывод результа на экран
    int** f1 = Perestanovka_Mass(f, n, m);
    Screen_Mass(f1, n, m); // выводим на экран новую матрицу
	
	Del_Mass(f, n, m); // после окончания работы c массивом f обязательно освобождаем его память
	Del_Mass(f1, n, m); // после окончания работы c массивом f1 обязательно освобождаем его память
	return 0;
}
