/// \file Matrix.cpp
/// \brief тело основной программы
/// \brief Задание координат точек вершин прямоугольника
/// \brief доступ к отдельным элементам матрицы
/// \brief заполнение матрицы одним значением
/// \brief заполнение матрицы случайными числами
/// \brief сложение и вычитание матриц (использовать оператор)
/// \brief умножение на число
/// \brief умножение матрицы на матрицу
/// \brief транспонирование
/// \brief создание диагональной матрицы
/// \brief вычисление определителя
/// \brief вычисление обратной матрицы
/// \brief доступ к строкам матрицы
/// \brief Операторы *=, -=, +=
/// \brief применения функции к элементам матрицы
/// \brief 
/// \brief 
/// \brief оформлен через модуль из трёх файлов
/// \brief создан репозиторий в GitHub 
/// \brief созданы 4 геттера и 4 сеттера
/// \author Бурдинская Наталья ВМК-22
/// \date 15.11.2023

// вызов заголовочного файла модуля MatrixModul.cpp
#include "MatrixModul.h"

//главная функция, вызываемая при запуске программы
int main()
{
    // Функция setlocale задаёт локализацию программы. 
    // LC_ALL указывает программе, что локализированы будут все функции.
    // «Rus» локализация произойдёт на русский язык
    setlocale(LC_ALL, "Russian");
    // вызвать в программе один раз, перед выводом чисел.
    cout << fixed << setprecision(3); // один знак после запятой

    // Производим тестирование кода через assert
    MatrixClass Test(3, 3), Test1(3, 3), Test2(3, 3), Test3(3, 3);
    cout << "======================================================" << endl;
    cout << "Матрица с одним значением = " << endl;
    Test.Matrix_Default(5);
    Test.Get_Matrix();
    cout << "======================================================" << endl;
    cout << endl;
    float a;
    cout << "======================================================" << endl;
    cout << "Матрица с рандомными значениями = " << endl;
    Test1.Matrix_Random(20, 30);
    Test1.Get_Matrix();
    cout << "======================================================" << endl;
    cout << endl;
    cout << "======================================================" << endl;
    a = Test2.Determinant(Test1, 3);
    cout << "Определитель = " << a << endl;;
    cout << "======================================================" << endl;
    cout << endl;
    cout << "======================================================" << endl;
    cout << "Обратная матрица = " << endl;
    Test3 = Test3.Inverse_Matrix(Test1);
    Test3.Get_Matrix();
    cout << "======================================================" << endl;
    cout << endl;
}